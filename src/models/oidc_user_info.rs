/*
 * traQ v3
 *
 * traQ v3 API
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// OidcUserInfo : 自分のユーザー詳細情報

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OidcUserInfo {
    /// ユーザーUUID
    #[serde(rename = "sub")]
    pub sub: uuid::Uuid,
    /// ユーザー名
    #[serde(rename = "name")]
    pub name: String,
    /// ユーザー名
    #[serde(rename = "preferred_username")]
    pub preferred_username: String,
    /// アイコン画像URL
    #[serde(rename = "picture")]
    pub picture: String,
    /// 更新日時
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
    #[serde(rename = "traq", skip_serializing_if = "Option::is_none")]
    pub traq: Option<Box<crate::models::OidcTraqUserInfo>>,
}

impl OidcUserInfo {
    /// 自分のユーザー詳細情報
    pub fn new(
        sub: uuid::Uuid,
        name: String,
        preferred_username: String,
        picture: String,
    ) -> OidcUserInfo {
        OidcUserInfo {
            sub,
            name,
            preferred_username,
            picture,
            updated_at: None,
            traq: None,
        }
    }
}
